// <auto-generated />
using System;
using AdoPet.Services.PetAdoption.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace PetAdoption.Infrastructure.Data.Migrations
{
    [DbContext(typeof(AdoptionContext))]
    [Migration("20230414215841_CreateShelterPetAdoptionTables")]
    partial class CreateShelterPetAdoptionTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("AdoPet.Services.PetAdoption.Domain.AggregateModels.AdopterAggregates.Adopter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Adopters");
                });

            modelBuilder.Entity("AdoPet.Services.PetAdoption.Domain.AggregateModels.ShelterAggregates.Adoption", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AdopterId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("PetId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ShelterId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("AdopterId");

                    b.HasIndex("PetId")
                        .IsUnique();

                    b.HasIndex("ShelterId");

                    b.ToTable("Adoption");
                });

            modelBuilder.Entity("AdoPet.Services.PetAdoption.Domain.AggregateModels.ShelterAggregates.Pet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Age")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("ShelterId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ShelterId");

                    b.ToTable("Pet");
                });

            modelBuilder.Entity("AdoPet.Services.PetAdoption.Domain.AggregateModels.ShelterAggregates.Shelter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Shelters");
                });

            modelBuilder.Entity("AdoPet.Services.PetAdoption.Domain.AggregateModels.ShelterAggregates.Adoption", b =>
                {
                    b.HasOne("AdoPet.Services.PetAdoption.Domain.AggregateModels.AdopterAggregates.Adopter", null)
                        .WithMany()
                        .HasForeignKey("AdopterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdoPet.Services.PetAdoption.Domain.AggregateModels.ShelterAggregates.Pet", null)
                        .WithOne()
                        .HasForeignKey("AdoPet.Services.PetAdoption.Domain.AggregateModels.ShelterAggregates.Adoption", "PetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdoPet.Services.PetAdoption.Domain.AggregateModels.ShelterAggregates.Shelter", null)
                        .WithMany("Adoptions")
                        .HasForeignKey("ShelterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AdoPet.Services.PetAdoption.Domain.AggregateModels.ShelterAggregates.Pet", b =>
                {
                    b.HasOne("AdoPet.Services.PetAdoption.Domain.AggregateModels.ShelterAggregates.Shelter", null)
                        .WithMany("Pets")
                        .HasForeignKey("ShelterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AdoPet.Services.PetAdoption.Domain.AggregateModels.ShelterAggregates.Shelter", b =>
                {
                    b.Navigation("Adoptions");

                    b.Navigation("Pets");
                });
#pragma warning restore 612, 618
        }
    }
}
